#!/bin/bash

## requirements

# run from source directory
cd "${0%/*}"

CONFIG=""
SESSION=""

## workflow funcs

run () {
    node ./lib/run "$@"
}

prepare () {
    echo -e "\e[90m Copying required frontend JS modules...\e[0m"
    cp -fv ../front/src/Answer.js ./lib/ext/Answer.js
    cp -fv ../front/src/Utils.js ./lib/ext/Utils.js
}

select_config () {
    echo ""
    echo "==== Select Player Config ===="
    echo ""

    for index in "${!FILES[@]}"; do
        echo -e "\e[32m ${index}\e[0m: $(basename ${FILES[$index]})"
    done

    echo ""
    read -p 'Select config: ' SELECTED

    if ! [[ "$SELECTED" =~ ^[0-9]+$ ]]; then
        echo -e "\e[31mError:\e[0m Not a number: ${SELECTED}!"
        select_config
    fi

    if [ ! -f "${FILES[$SELECTED]}" ]; then
        echo -e "\e[31mError:\e[0m File not found: ${SELECTED}!"
        select_config
    fi

    echo ""

    run --config $(basename "${FILES[$SELECTED]}") --session "${SESSION}"
}

## main

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
        -c|--config)
            CONFIG="$2"
            shift # past argument
            shift # past value
            ;;
        -s|--session)
            SESSION="$2"
            shift # past argument
            shift # past value
            ;;
        *) # preserve positional arguments
            POSITIONAL+=("$1") # save it in an array for later
            shift # past argument
            ;;
    esac

done
set -- "${POSITIONAL[@]}" # restore positional parameters

prepare

for file in configs/*.js; do
    if [[ $file != template* ]] ; then
        FILES=("${FILES[@]}" "$file")
    fi
done

if [[ -z "${CONFIG}" ]]; then
    select_config
else
    run --config $(basename "${CONFIG}") --session "${SESSION}"
fi
