@description system answers cannot be added or deleted (python)
@useproxy!

#!------- Rather than the backend this test tests if lighttpd in our test environment has been configured correctly.

# Create a dummy survey
definesurvey foo
version 2
Silly test survey updated
with python
question1:Question 1::TEXT:0::-1:-1:0:0::
question2:Question 2::TEXT:0::-1:-1:0:0::
endofsurvey

# Create python module, skipping question 2. Test passes if this IS invoked
python
def nextquestion(questions, answers, **kwargs):

    fp = open('/tmp/python-output', 'a')
    print(str(answers), file = fp)
    fp.close()

    for answer in answers:
        assert answer['uid'][0] != '@'
        assert answer['type'] != 'META'

    progress = [len(answers), len(questions)]

    if len(answers) < len(questions):
        return {
            'status': 0,
            'message': 'python invoked',
            'progress': progress,
            'next_questions': [
                questions[len(answers)]
            ],
        }

    return {
        'status': 0,
        'message': 'python invoked',
        'progress': progress,
        'next_questions': [],
    }

def analyse(questions, answers, **kwargs):

    fp = open('/tmp/python-output', 'a')
    print('analyse:')
    print(str(answers), file = fp)
    fp.close()

    for answer in answers:
        assert answer['uid'][0] != '@'
        assert answer['type'] != 'META'

    return 'OK'

endofpython

request proxy 200 GET /session?surveyid=foo --user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1"
extract_sessionid

# ... internal check if prev directive worked
verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META:question1:<SESSION_NEW>:0:0:<UTIME>:0:0:0::0:<UTIME>
endofsession

#!------- /nextquestion  does not care about headers and returns first question
request proxy 200 GET /nextquestion?sessionid=<session_id> --user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1"
match_string {"status": 0, "message": "python invoked", "progress": [0, 2], "next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

#!------- /answers adds answer to first question and leaves headers untouched
request proxy 200 POST /answers?sessionid=<session_id>&answer=question1:Answer+1:0:0:0:0:0:0:0 --user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1"
match_string {"status": 0, "message": "python invoked", "progress": [1, 2], "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META:question2:<SESSION_OPEN>:0:0:<UTIME>:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- add @header and meta answer MANUALLY to session (first)
session_add_answer @question:TEXT:@answer:0:0:0:0:0:0:0::0:<UTIME>
session_add_answer metaquestion:META:@answer:0:0:0:0:0:0:0::0:<UTIME>

# ... internal check if prev directive worked
verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META:question2:<SESSION_OPEN>:0:0:<UTIME>:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
@question:TEXT:@answer:0:0:0:0:0:0:0::0:<UTIME>
metaquestion:META:@answer:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- /nextquestion python is not aware of meta and @fields
request proxy 200 GET /nextquestion?sessionid=<session_id> --user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1"
match_string {"status": 0, "message": "python invoked", "progress": [1, 2], "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

#!------- /answers adds answer to second question and leaves header, meta and @fields untouched
request proxy 200 POST /answers?sessionid=<session_id>&answer=question2:Answer+2:0:0:0:0:0:0:0 --user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1"
match_string {"status": 0, "message": "python invoked", "progress": [2, 2], "next_questions": []}

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_FINISHED>:0:0:<UTIME>:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
@question:TEXT:@answer:0:0:0:0:0:0:0::0:<UTIME>
metaquestion:META:@answer:0:0:0:0:0:0:0::0:<UTIME>
question2:TEXT:Answer 2:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- python analyse header, meta and @fields untouched
request proxy 200 GET /analyse?sessionid=<session_id> --user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1"
match_string OK
