@description meta answers cannot be added or deleted
@useproxy!

#!------- Rather than the backend this test tests if lighttpd in our test environment has been configured correctly.

# Create a dummy survey
definesurvey foo
version 2
Silly test survey updated
without python
question1:Question 1::TEXT:0::-1:-1:0:0::
question2:Question 2::TEXT:0::-1:-1:0:0::
endofsurvey

request proxy 200 /newsession?surveyid=foo curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
extract_sessionid

#!------- add meta answer MANUALLY to session (first)
session_add_answer META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>

# ... internal check if prev directive worked
verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_NEW>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- nextquestion (1) does not care about meta answer and returns first question
request proxy 200 /nextquestion?sessionid=$SESSION curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [0, 2], "next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

#!------- addanswer adds answer to first question and leaves meta question untouched
request proxy 200 /addanswer?sessionid=$SESSION&answer=question1:Answer+1:0:0:0:0:0:0:0 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [1, 2], "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_OPEN>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- add meta answer MANUALLY to session (middle)
session_add_answer META_2:META:Meta 2:0:0:0:0:0:0:0::0:<UTIME>

#!------- nextquestion (2) does not care about meta answer and returns second question
request proxy 200 /nextquestion?sessionid=$SESSION curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [1, 2], "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

#!------- (survey finished) addanswer adds answer to second question and leaves meta question untouched
request proxy 200 /addanswer?sessionid=$SESSION&answer=question2:Answer+2:0:0:0:0:0:0:0 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [2, 2], "next_questions": []}

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_FINISHED>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
META_2:META:Meta 2:0:0:0:0:0:0:0::0:<UTIME>
question2:TEXT:Answer 2:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- add meta answer MANUALLY to session (last)
session_add_answer META_3:META:Meta 3:0:0:0:0:0:0:0::0:<UTIME>

# ... internal check if prev directive worked
verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_FINISHED>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
META_2:META:Meta 2:0:0:0:0:0:0:0::0:<UTIME>
question2:TEXT:Answer 2:0:0:0:0:0:0:0::0:<UTIME>
META_3:META:Meta 3:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- trying to delanswer META question should fail
request proxy 400 /delanswer?sessionid=$SESSION&questionid=META_3 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
request proxy 400 /delanswer?sessionid=$SESSION&questionid=META_2 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
request proxy 400 /delanswer?sessionid=$SESSION&questionid=META_1 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_FINISHED>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
META_2:META:Meta 2:0:0:0:0:0:0:0::0:<UTIME>
question2:TEXT:Answer 2:0:0:0:0:0:0:0::0:<UTIME>
META_3:META:Meta 3:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- trying to delanswer (incrementially) survey questions should succeed
request proxy 200 /delanswer?sessionid=$SESSION&questionid=question2 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [1, 2], "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "Answer 2", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

request proxy 200 /delanswer?sessionid=$SESSION&questionid=question1 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [0, 2], "next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "Answer 1", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_OPEN>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::1:<UTIME>
META_2:META:Meta 2:0:0:0:0:0:0:0::0:<UTIME>
question2:TEXT:Answer 2:0:0:0:0:0:0:0::1:<UTIME>
META_3:META:Meta 3:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- restoring answers for next step
request proxy 200 /addanswer?sessionid=$SESSION&answer=question1:Answer+1:0:0:0:0:0:0:0 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [1, 2], "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "Answer 2", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

request proxy 200 /addanswer?sessionid=$SESSION&answer=question2:Answer+2:0:0:0:0:0:0:0 curlargs(--user test:1234 -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [2, 2], "next_questions": []}

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_FINISHED>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::0:<UTIME>
META_2:META:Meta 2:0:0:0:0:0:0:0::0:<UTIME>
question2:TEXT:Answer 2:0:0:0:0:0:0:0::0:<UTIME>
META_3:META:Meta 3:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!------- trying to delprevanswer survey questions should succeed
request proxy 200 /delprevanswer?sessionid=$SESSION curlargs(--user test:1234 -H "If-Match: <response_etag>" -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [1, 2], "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "Answer 2", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

request proxy 200 /delprevanswer?sessionid=$SESSION curlargs(--user test:1234 -H "If-Match: <response_etag>" -H "X-SurveyProxy-Auth-User: user1" -H "X-SurveyProxy-Auth-Group: group1")
match_string {"status": 0, "message": "", "progress": [0, 2], "next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "Answer 1", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

verify_session
foo/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
@user:META:user1:0:0:0:0:0:0:0::0:<UTIME>
@group:META:group1:0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<FCGIENV_MIDDLEWARE>:<IDENDITY_HTTP_TRUSTED>:0:0:0:0:0:0::0:<UTIME>
@state:META::<SESSION_OPEN>:0:0:<UTIME>:0:0:0::0:<UTIME>
META_1:META:Meta 1:0:0:0:0:0:0:0::0:<UTIME>
question1:TEXT:Answer 1:0:0:0:0:0:0:0::1:<UTIME>
META_2:META:Meta 2:0:0:0:0:0:0:0::0:<UTIME>
question2:TEXT:Answer 2:0:0:0:0:0:0:0::1:<UTIME>
META_3:META:Meta 3:0:0:0:0:0:0:0::0:<UTIME>
endofsession

