@description Python implementation of nextquestion can be used

# Create a dummy survey
# XXX - In any test where we use python, we need to make sure we don't reuse any survey name
# that appears in any othe test, else our python functions will be hanging around and will get used.
definesurvey nextquestion_python
version 1
Silly test survey updated
multichoice:Select one of the following:Select one of the following:MULTICHOICE:0::-1:-1:-1:3:Yes,No,Maybe:
question1:What is the answer to question 1?:What is the answer to question 1?:TEXT:0:I don't know:-1:-1:0:0::
question2:How boring was question 1?:How boring was question 1?:TEXT:0:I don't know:-1:-1:0:0::
endofsurvey

# Create python module
python
def nextquestion_nextquestion_python(questions,answers):
    return {
        'status': 1,
        'message': 'warning!',
        'progress': [len(answers), len(questions)],
        'next_questions': ['question2'],
    }
endofpython

# Request creation of a  new session
request 200 /newsession?surveyid=nextquestion_python

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session(skip_headers)
nextquestion_python/0a7caf5b02adad7583c7bfae30f6f119cb3581cc
endofsession

# Ask for next question
request 200 /nextquestion?sessionid=$SESSION
match_string {"status": 1, "message": "warning!", "progress": [0, 3], "next_questions": [{"id": "question2", "name": "question2", "title": "How boring was question 1?", "description": "How boring was question 1?", "type": "TEXT", "default_value": "I don't know", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

