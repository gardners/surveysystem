description Version 2 python directives: "without python": next_question_generic() and "with python": call_python_nextquestion()

#!---------------------
#!Survey WITHOUT python
#!---------------------

# Create a dummy survey
definesurvey without_python
version 2
Silly test survey updated
without python
question1:Question 1::TEXT:0::-1:-1:0:0::
question2:Question 2::TEXT:0::-1:-1:0:0::
question3:Question 3::TEXT:0::-1:-1:0:0::
endofsurvey

# Create unused python module. Test passes if this is NOT invoked
python
def nextquestion(questions, answers):
    # note that question2 will never be returned
    if len(answers) == 0:
        return {
            'status': 0,
            'message': '',
            'next_questions': ['question3'],
        }
    if len(answers) == 1:
        return {
            'status': 0,
            'message': '',
            'next_questions': ['question1'],
        }
    else:
        return {
            'status': 0,
            'message': 'end of survey',
            'next_questions': [],
        }
endofpython

# Request creation of a  new session
request 200 newsession?surveyid=without_python

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session
without_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
endofsession

# Ask for first question - should return question1
request 200 nextquestion?sessionid=$SESSION
match_string {"status": 0, "message": "", "next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

# should not invoke python and return next question
request 200 addanswer?sessionid=$SESSION&answer=question1:Hello+World+1:0:0:0:0:0:0:0:
match_string {"status": 0, "message": "", "next_questions": [{"id": "question2", "name": "question2", "title": "Question 2", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

# should not invoke python and return next question
request 200 addanswer?sessionid=$SESSION&answer=question2:Hello+World+2:0:0:0:0:0:0:0:
match_string {"status": 0, "message": "", "next_questions": [{"id": "question3", "name": "question3", "title": "Question 3", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

# finish survey
request 200 addanswer?sessionid=$SESSION&answer=question3:Hello+World+3:0:0:0:0:0:0:0:
match_string {"status": 0, "message": "", "next_questions": []}

# Check that we are offered the next question to answer

# Make sure answer ends up in file
verify_session
without_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
question1:Hello World 1:0:0:0:0:0:0:0::0:<UTIME>
question2:Hello World 2:0:0:0:0:0:0:0::0:<UTIME>
question3:Hello World 3:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!---------------------
#!Survey WITH python
#!---------------------

# Create a dummy survey
definesurvey with_python
version 2
Silly test survey updated
with python
question1:Question 1::TEXT:0::-1:-1:0:0::
question2:Question 2::TEXT:0::-1:-1:0:0::
question3:Question 3::TEXT:0::-1:-1:0:0::
endofsurvey

# Create python module, skipping question 2. Test passes if this IS invoked
python
def nextquestion(questions, answers):
    # note that question2 will never be returned
    if len(answers) == 0:
        return {
            'status': 0,
            'message': '',
            'next_questions': ['question3'],
        }
    if len(answers) == 1:
        return {
            'status': 0,
            'message': '',
            'next_questions': ['question1'],
        }
    else:
        return {
            'status': 0,
            'message': 'end of survey',
            'next_questions': [],
        }
endofpython

# Request creation of a  new session
request 200 newsession?surveyid=with_python

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session
with_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
endofsession

# Ask for "first" question - should return question3
request 200 nextquestion?sessionid=$SESSION
match_string {"status": 0, "message": "", "next_questions": [{"id": "question3", "name": "question3", "title": "Question 3", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

# answer first question - should return question1
request 200 addanswer?sessionid=$SESSION&answer=question3:Hello+World+1:0:0:0:0:0:0:0:
match_string {"status": 0, "message": "", "next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

# finish survey
request 200 addanswer?sessionid=$SESSION&answer=question1:Hello+World+1:0:0:0:0:0:0:0:
match_string {"status": 0, "message": "end of survey", "next_questions": []}

# Check that we are offered the next question to answer

# Make sure answer ends up in file
verify_session
with_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
question3:Hello World 3:0:0:0:0:0:0:0::0:<UTIME>
question1:Hello World 1:0:0:0:0:0:0:0::0:<UTIME>
endofsession
