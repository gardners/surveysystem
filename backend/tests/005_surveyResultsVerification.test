skip! description Answer questions, and obtain a sensible next question each time

# Create a dummy survey
definesurvey 005_surveyResultsVerification
version 2
Silly test survey updated
pythondir=.
email:Email Address:Email Address:TEXT:-1:email:-999:999:2:0:0::
password1:Password:Password:TEXT:-1:password1:-999:999:2:0:0::
password2:Confirm Password:Confirm Password:TEXT:-1:password2:-999:999:2:0:0::
beforeStartingSurvey:Please answer the following important questions before commencing the survey...:Please answer the following important questions before commencing the survey...:TEXT:-1:beforeStartingSurvey:-999:999:2:0:0:endofsurvey:
MedicalConditions:Are you currently under the care of a physician for depression and/or anxiety?:Are you currently under the care of a physician for depression and/or anxiety?:MULTICHOICE:-1:MedicalConditions:-999:999:2:2:Yes,No:
endofsurvey

python
def nextquestion_005_surveyResultsVerification(questions,answers):
    if len(answers) == 0:
        return 'email'
    elif answers[-1]['uid'] == 'email':
        return 'password1'
    elif answers[-1]['uid'] == 'password1':
        return 'password2'
    elif answers[-1]['uid'] == 'password2':
        return 'beforeStartingSurvey'
    elif answers[-1]['uid'] == 'beforeStartingSurvey':
        return 'MedicalConditions'
    else:
        return list()
endofpython

# Request creation of a  new session
request 200 newsession?surveyid=005_surveyResultsVerification

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session
005_surveyResultsVerification/225486ac2a2afecab7c3917b826745b07d354e4f
endofsession

request 200 addanswer?sessionid=$SESSION&answer=email:test.email@domain.com:0:0:0:0:0:0:0:

# Check that we are offered the next question to answer
#match_string {"next_questions": [{"id": "password1", "name": "question2", "title": "What is the answer to question 1?", "description": "What is the answer to question 2?", "type": "TEXT", "unit": ""}]}
match_string "password1"

# Make sure answer ends up in file
verify_session
005_surveyResultsVerification/225486ac2a2afecab7c3917b826745b07d354e4f
email:test2.email@domain.com:0:0:0:0:0:0:0:
endofsession

request 200 addanswer?sessionid=$SESSION&answer=password1:myPaSSw0rD:0:0:0:0:0:0:0:

# Check that we are offered the next question to answer
#match_string {"next_questions": [{"id": "question3", "name": "question3", "title": "How boring was question 1?", "description": "How boring was question 2?", "type": "TEXT", "unit": ""}]}
match_string "password2"

# Make sure answer ends up in file
verify_session
005_surveyResultsVerification/225486ac2a2afecab7c3917b826745b07d354e4f
email:test.email@domain.com:0:0:0:0:0:0:0:
pasSword1:myPa$$w0rD:0:0:0:0:0:0:0:
endofsession

request 200 addanswer?sessionid=$SESSION&answer=password2:myPaSSw0rD:0:0:0:0:0:0:0:

# Check that we are offered the next question to answer
#match_string {"next_questions": [{"id": "question3", "name": "question3", "title": "How boring was question 1?", "description": "How boring was question 2?", "type": "TEXT", "unit": ""}]}
match_string "beforeStartingSurvey"

# Make sure answer ends up in file
verify_session
005_surveyResultsVerification/225486ac2a2afecab7c3917b826745b07d354e4f
email:test.email@domain.com:0:0:0:0:0:0:0:
password1:myPaSSw0rD:0:0:0:0:0:0:0:
password2:myPaSSw0rD:0:0:0:0:0:0:0:
endofsession



