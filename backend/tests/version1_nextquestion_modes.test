description Version 1 requires python nextquestion module

#!---------------------
#!Survey WITHOUT python
#!---------------------

# Create a dummy survey
definesurvey without_python
version 1
Silly test survey updated
question1:Question 1::TEXT:0::-1:-1:0:0::
question2:Question 2::TEXT:0::-1:-1:0:0::
question3:Question 3::TEXT:0::-1:-1:0:0::
endofsurvey

# NO Python module

# Request creation of a  new session
request 200 newsession?surveyid=without_python

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session
without_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
endofsession

# should not invoke python and return 500 misconfiguration error
request 500 addanswer?sessionid=$SESSION&answer=question1:Hello+World:0:0:0:0:0:0:0:

# Check that we are offered the next question to answer

# Make sure answer ends up in file
verify_session
without_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
question1:Hello World:0:0:0:0:0:0:0::0:<UTIME>
endofsession

#!---------------------
#!Survey WITH python
#!---------------------

# Create a dummy survey
definesurvey with_python
version 1
Silly test survey updated
question1:Question 1::TEXT:0::-1:-1:0:0::
question2:Question 2::TEXT:0::-1:-1:0:0::
question3:Question 3::TEXT:0::-1:-1:0:0::
endofsurvey

# Create python module, skipping question 2. Test passes if this IS invoked
python
def nextquestion(questions, answers):
    # note that question2 will never be returned
    if len(answers) == 0:
        return 'question3'
    if len(answers) == 1:
        return 'question1'
    else:
        return ''
endofpython

# Request creation of a  new session
request 200 newsession?surveyid=with_python

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session
with_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
endofsession

# Ask for "first" question - should return question3
request 200 nextquestion?sessionid=$SESSION
match_string {"next_questions": [{"id": "question3", "name": "question3", "title": "Question 3", "description": "", "type": "TEXT", "default_value": "", "unit": ""}]}

# answer first question - should return question1
request 200 addanswer?sessionid=$SESSION&answer=question3:Hello+World:0:0:0:0:0:0:0:
match_string {"next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "", "unit": ""}]}

# Check that we are offered the next question to answer

# Make sure answer ends up in file
verify_session
with_python/a8df47cf88569fdd9d16b9b40ab41e5ddef4a21b
question3:Hello World:0:0:0:0:0:0:0::0:<UTIME>
endofsession
