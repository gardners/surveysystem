@description HEAD - pre-validate request answering a question in a survey

# Create a dummy survey
definesurvey foo
version 2
Silly test survey updated
without python
question1:Question 1::TEXT:0::-1:-1:0:0::
endofsurvey

# Request creation of a  new session
request 200 GET /session?surveyid=foo

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session
foo/current
@user:META::0:0:0:0:0:0:0::0:<UTIME>
@group:META::0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<AUTHORITY_NONE>:<IDENDITY_HTTP_PUBLIC>:0:0:0:0:0:0::0:<UTIME>
@state:META:question1:<SESSION_NEW>:0:0:<UTIME>:0:0:0::0:<UTIME>
endofsession

request 200 GET /nextquestion?sessionid=<session_id>
match_string {"status": 0, "message": "", "progress": [0, 1], "next_questions": [{"id": "question1", "name": "question1", "title": "Question 1", "description": "", "type": "TEXT", "default_value": "", "min_value": -1, "max_value": -1, "choices": [], "unit": ""}]}

# Check that we have open/nextquestions registered in @state
verify_session
foo/current
@user:META::0:0:0:0:0:0:0::0:<UTIME>
@group:META::0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<AUTHORITY_NONE>:<IDENDITY_HTTP_PUBLIC>:0:0:0:0:0:0::0:<UTIME>
@state:META:question1:<SESSION_NEW>:0:0:<UTIME>:0:0:0::0:<UTIME>
endofsession

#! ----
#! - PASS HEAD add answer
#! ----

request 200 HEAD /answers/test?sessionid=<session_id>&answer=question1:Hello+World:0:0:0:0:0:0:0
verify_response_content_type(application/json)
match_string <empty>

# Check that we are offered the next question to answer

#! - Make sure answer is NOT saved
verify_session
foo/current
@user:META::0:0:0:0:0:0:0::0:<UTIME>
@group:META::0:0:0:0:0:0:0::0:<UTIME>
@authority:META:<AUTHORITY_NONE>:<IDENDITY_HTTP_PUBLIC>:0:0:0:0:0:0::0:<UTIME>
@state:META:question1:<SESSION_NEW>:0:0:<UTIME>:0:0:0::0:<UTIME>
endofsession

#! ----
#! - FAIL HEAD add answer
#! ----

request 400 HEAD /answers/test?sessionid=<session_id>&answer=invalid:Hello+World:0:0:0:0:0:0:0
verify_response_content_type(application/json)
match_string <empty>
