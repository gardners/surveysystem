skip! description Python implementation of nextquestion can be used

# note that this test requires the actual sleep question logic (Python) to be available.
#
# Create a dummy survey
# XXX - In any test where we use python, we need to make sure we don't reuse any survey name
# that appears in any othe test, else our python functions will be hanging around and will get used.
definesurvey 001nextquestionpythonActualLogic
version 1
Silly test survey updated
email:Email Address::EMAIL:-1::-999:999:2:0::
password1:Password::PASSWORD:-1::-999:999:2:0::
endofsurvey

# Create python module
python
import sys, os
sys.path.insert(0, os.getenv('SURVEY_PYTHON_DIR', ''))

from questionLogic import ProcessQuestions
def nextquestion_001nextquestionpythonActualLogic(questions,answers):
    PQ = ProcessQuestions(questions=questions)
    nextID = PQ.calcNextQnID(None,answers)
    with open('/tmp/pythoninputs.txt', 'w') as f:
        f.write("python dir: %s\n" % os.getenv('SURVEY_PYTHON_DIR', ''))
        f.write("QNs: %s\n" % questions)
        f.write("Qn len: %d\n" % len(questions))
        f.write("ans: %s\n" % answers)
        f.write("ans len: %d\n" % len(answers))
        f.write("nextID: %s\n" % nextID)
    return(nextID)
endofpython

# Request creation of a  new session
request 200 newsession?surveyid=001nextquestionpythonActualLogic

# Get the session ID that newsession should have returned
extract_sessionid

# Check that we have an empty session file created
verify_session
001nextquestionpythonActualLogic/11b0c147a2e1e1dc1840ab719a031fccaa4014ab
endofsession

# Ask for next question
request 200 nextquestion?sessionid=$SESSION
match_string {"next_questions": [{"id": "email", "name": "email", "title": "Email Address", "description": "", "type": "EMAIL", "unit": ""}]}

request 200 addanswer?sessionid=$SESSION&answer=email:test.email@someDomain.org:0:0:0:0:0:0:0::0
match_string {"next_questions": [{"id": "password1", "name": "password1", "title": "Password", "description": "", "type": "PASSWORD", "unit": ""}]}

request 200 addanswer?sessionid=$SESSION&answer=password1:hunter123:0:0:0:0:0:0:0::0
match_string {"next_questions": []}

# Make sure answer ends up in file
verify_session
foo/0a7caf5b02adad7583c7bfae30f6f119cb3581cc
email:test.email@someDomain.org:0:0:0:0:0:0:0::0
password1:hunter123:0:0:0:0:0:0:0::0
endofsession


